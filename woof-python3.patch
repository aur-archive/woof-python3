diff -aur package.pristine/woof-2009-12-27.py package.new/woof-2009-12-27.py
--- package.pristine/woof-2009-12-27.py	2009-12-27 23:47:43.000000000 +0100
+++ package.new/woof-2009-12-27.py	2011-02-08 20:38:51.150000040 +0100
@@ -26,9 +26,9 @@
 # tarfile usage suggested by Morgan Lefieux <comete@geekandfree.org>
 # File upload support loosely based on code from Stephen English <steve@secomputing.co.uk>
 
-import sys, os, errno, socket, getopt, commands, tempfile
-import cgi, urllib, BaseHTTPServer
-import ConfigParser
+import sys, os, errno, socket, getopt, subprocess, tempfile
+import cgi, urllib.request, urllib.parse, urllib.error, http.server
+import configparser
 import shutil, tarfile, zipfile
 import struct
 
@@ -38,6 +38,9 @@
 compressed = 'gz'
 upload = False
 
+class EvilZipStreamWrapperError(Exception):
+    def __str__(self):
+        return "unexpected seek for EvilZipStreamWrapper"
 
 class EvilZipStreamWrapper(TM):
    def __init__ (self, victim):
@@ -64,7 +67,7 @@
             self.tells = []
             self.in_file_data = 0
          else:
-            raise "unexpected seek for EvilZipStreamWrapper"
+            raise EvilZipStreamWrapperError
 
    def write (self, data):
       # only test for headers if we know that we're not writing
@@ -119,7 +122,7 @@
 # Currently it is impossible to serve different files with different
 # instances of this class.
 
-class FileServHTTPRequestHandler (BaseHTTPServer.BaseHTTPRequestHandler):
+class FileServHTTPRequestHandler (http.server.BaseHTTPRequestHandler):
    server_version = "Simons FileServer"
    protocol_version = "HTTP/1.0"
 
@@ -127,7 +130,7 @@
 
    def log_request (self, code='-', size='-'):
       if code == 200:
-         BaseHTTPServer.BaseHTTPRequestHandler.log_request (self, code, size)
+         http.server.BaseHTTPRequestHandler.log_request (self, code, size)
 
 
    def do_POST (self):
@@ -146,7 +149,7 @@
                                environ = {'REQUEST_METHOD' : 'POST'},
                                keep_blank_values = 1,
                                strict_parsing = 1)
-      if not form.has_key ("upfile"):
+      if "upfile" not in form:
          self.send_error (403, "No upload provided")
          return
          
@@ -167,9 +170,9 @@
       for suffix in ["", ".1", ".2", ".3", ".4", ".5", ".6", ".7", ".8", ".9"]:
          destfilename = os.path.join (".", upfilename + suffix)
          try:
-            destfile = os.open (destfilename, os.O_WRONLY | os.O_CREAT | os.O_EXCL, 0644)
+            destfile = os.open (destfilename, os.O_WRONLY | os.O_CREAT | os.O_EXCL, 0o644)
             break
-         except OSError, e:
+         except OSError as e:
             if e.errno == errno.EEXIST:
                continue
             raise
@@ -178,7 +181,7 @@
          upfilename += "."
          destfile, destfilename = tempfile.mkstemp (prefix = upfilename, dir = ".")
 
-      print >>sys.stderr, "accepting uploaded file: %s -> %s" % (upfilename, destfilename)
+      print("accepting uploaded file: %s -> %s" % (upfilename, destfilename), file=sys.stderr)
 
       shutil.copyfileobj (upfile.file, os.fdopen (destfile, "w"))
       
@@ -193,7 +196,7 @@
                   <p>Thanks a lot!</p>
                 </body>
               </html>
-            """
+            """.encode('utf-8')
       self.send_response (200)
       self.send_header ("Content-Type", "text/html")
       self.send_header ("Content-Length", str (len (txt)))
@@ -221,7 +224,7 @@
                      </form>
                    </body>
                  </html>
-               """
+               """.encode('utf-8')
          self.send_response (200)
          self.send_header ("Content-Type", "text/html")
          self.send_header ("Content-Length", str (len (txt)))
@@ -232,8 +235,8 @@
       # Redirect any request to the filename of the file to serve.
       # This hands over the filename to the client.
 
-      self.path = urllib.quote (urllib.unquote (self.path))
-      location = "/" + urllib.quote (os.path.basename (self.filename))
+      self.path = urllib.parse.quote (urllib.parse.unquote (self.path))
+      location = "/" + urllib.parse.quote (os.path.basename (self.filename))
       if os.path.isdir (self.filename):
          if compressed == 'gz':
             location += ".tar.gz"
@@ -245,11 +248,11 @@
             location += ".tar"
 
       if self.path != location:
-         txt = """\
+         txt = ("""\
                 <html>
                    <head><title>302 Found</title></head>
                    <body>302 Found <a href="%s">here</a>.</body>
-                </html>\n""" % location
+                </html>\n""" % location).encode('utf-8')
          self.send_response (302)
          self.send_header ("Location", location)
          self.send_header ("Content-Type", "text/html")
@@ -276,7 +279,7 @@
             type = "dir"
 
          if not type:
-            print >> sys.stderr, "can only serve files or directories. Aborting."
+            print("can only serve files or directories. Aborting.", file=sys.stderr)
             sys.exit (1)
 
          self.send_response (200)
@@ -288,7 +291,7 @@
 
          try:
             if type == "file":
-               datafile = file (self.filename)
+               datafile = open (self.filename, 'br')
                shutil.copyfileobj (datafile, self.wfile)
                datafile.close ()
             elif type == "dir":
@@ -301,7 +304,7 @@
                      for f in files:
                         filename = os.path.join (root, f)
                         if filename[:len (stripoff)] != stripoff:
-                           raise RuntimeException, "invalid filename assumptions, please report!"
+                           raise RuntimeException("invalid filename assumptions, please report!")
                         zfile.write (filename, filename[len (stripoff):])
                   zfile.close ()
                else:
@@ -310,9 +313,9 @@
                   tfile.add (self.filename,
                              arcname=os.path.basename(self.filename))
                   tfile.close ()
-         except Exception, e:
-            print e
-            print >>sys.stderr, "Connection broke. Aborting"
+         except Exception as e:
+            print(e)
+            print("Connection broke. Aborting", file=sys.stderr)
 
 
 def serve_files (filename, maxdown = 1, ip_addr = '', port = 8080):
@@ -326,16 +329,16 @@
    FileServHTTPRequestHandler.filename = filename
 
    try:
-      httpd = BaseHTTPServer.HTTPServer ((ip_addr, port),
+      httpd = http.server.HTTPServer ((ip_addr, port),
                                          FileServHTTPRequestHandler)
    except socket.error:
-      print >>sys.stderr, "cannot bind to IP address '%s' port %d" % (ip_addr, port)
+      print("cannot bind to IP address '%s' port %d" % (ip_addr, port), file=sys.stderr)
       sys.exit (1)
 
    if not ip_addr:
       ip_addr = find_ip ()
    if ip_addr:
-      print "Now serving on http://%s:%s/" % (ip_addr, httpd.server_port)
+      print("Now serving on http://%s:%s/" % (ip_addr, httpd.server_port))
 
    while cpid != 0 and maxdownloads > 0:
       httpd.handle_request ()
@@ -344,7 +347,7 @@
 
 def usage (defport, defmaxdown, errmsg = None):
    name = os.path.basename (sys.argv[0])
-   print >>sys.stderr, """
+   print("""
     Usage: %s [-i <ip_addr>] [-p <port>] [-c <count>] <file>
            %s [-i <ip_addr>] [-p <port>] [-c <count>] [-z|-j|-Z|-u] <dir>
            %s [-i <ip_addr>] [-p <port>] [-c <count>] -s
@@ -376,11 +379,11 @@
         count = 2
         ip = 127.0.0.1
         compressed = gz
-   """ % (name, name, name, name, name, defmaxdown, defport)
+   """ % (name, name, name, name, name, defmaxdown, defport), file=sys.stderr)
 
    if errmsg:
-      print >>sys.stderr, errmsg
-      print >>sys.stderr
+      print(errmsg, file=sys.stderr)
+      print(file=sys.stderr)
    sys.exit (1)
 
 
@@ -392,7 +395,7 @@
    port = 8080
    ip_addr = ''
 
-   config = ConfigParser.ConfigParser()
+   config = configparser.ConfigParser()
    config.read (['/etc/woofrc', os.path.expanduser('~/.woofrc')])
 
    if config.has_option ('main', 'port'):
@@ -420,7 +423,7 @@
 
    try:
       options, filenames = getopt.getopt (sys.argv[1:], "hUszjZui:c:p:")
-   except getopt.GetoptError, desc:
+   except getopt.GetoptError as desc:
       usage (defaultport, defaultmaxdown, desc)
 
    for option, val in options:
